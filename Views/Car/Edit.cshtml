@model CarRentalSystem.ViewModels.CarViewModel
@{
    ViewData["Title"] = "Edit Car";
}

<div class="row">
    <div class="col-md-8 offset-md-2">
        <div class="card">
            <div class="card-header">
                <h4>@ViewData["Title"] - @Model.Brand @Model.Model</h4>
            </div>
            <div class="card-body">

                @if (TempData["Success"] != null)
                {
                    <div class="alert alert-success alert-dismissible fade show" role="alert">
                        @TempData["Success"]
                        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                    </div>
                }

                @if (TempData["Error"] != null)
                {
                    <div class="alert alert-danger alert-dismissible fade show" role="alert">
                        @TempData["Error"]
                        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                    </div>
                }

                <form asp-action="Edit" method="post">
                    <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>

                    <input asp-for="Id" type="hidden" />

                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group mb-3">
                                <label asp-for="Brand" class="form-label"></label>
                                <input asp-for="Brand" class="form-control" />
                                <span asp-validation-for="Brand" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group mb-3">
                                <label asp-for="Model" class="form-label"></label>
                                <input asp-for="Model" class="form-control" />
                                <span asp-validation-for="Model" class="text-danger"></span>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group mb-3">
                                <label asp-for="Year" class="form-label"></label>
                                <input asp-for="Year" class="form-control" type="number" min="1900" max="2030" />
                                <span asp-validation-for="Year" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group mb-3">
                                <label asp-for="LicensePlate" class="form-label"></label>
                                <input asp-for="LicensePlate" class="form-control" />
                                <span asp-validation-for="LicensePlate" class="text-danger"></span>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group mb-3">
                                <label asp-for="PricePerDay" class="form-label"></label>
                                <div class="input-group">
                                    <span class="input-group-text">Rp</span>
                                    <input type="number"
                                           name="PricePerDay"
                                           id="PricePerDay"
                                           class="form-control"
                                           value="@((int)Model.PricePerDay)"
                                           step="1000"
                                           min="50000"
                                           oninput="formatPriceInput(this)" />
                                </div>
                                <span asp-validation-for="PricePerDay" class="text-danger"></span>
                                <small class="form-text text-muted">Masukkan angka bulat tanpa titik (contoh: 750000)</small>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group mb-3">
                                <label asp-for="ImageUrl" class="form-label"></label>
                                <input asp-for="ImageUrl" class="form-control" />
                                <span asp-validation-for="ImageUrl" class="text-danger"></span>
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-save"></i> Update Car
                        </button>
                        <a asp-action="Index" class="btn btn-secondary">
                            <i class="fas fa-arrow-left"></i> Back to List
                        </a>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        function formatPriceInput(input) {
            // Remove any non-digit characters except for the value itself
            let value = input.value.replace(/[^\d]/g, '');

            // Ensure minimum value
            if (value && parseInt(value) < 50000) {
                // Don't auto-correct, let validation handle it
            }

            // Update the input value
            input.value = value;
        }

        // Format on page load
        document.addEventListener('DOMContentLoaded', function() {
            const priceInput = document.getElementById('PricePerDay');
            if (priceInput) {
                // Ensure no decimal places shown
                let currentValue = Math.floor(parseFloat(priceInput.value) || 0);
                priceInput.value = currentValue;
            }
        });
    </script>
}
